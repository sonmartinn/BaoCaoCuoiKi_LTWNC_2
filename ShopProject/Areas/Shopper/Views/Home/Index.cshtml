@{
    ViewBag.Title = "Trang chủ";
    Layout = "~/Areas/Shopper/Views/Shared/_LayoutShop.cshtml";
}
@{
    ShopProject.Repository.ProductDAO proDAO = new ShopProject.Repository.ProductDAO();
    ShopProject.Areas.Shopper.Models.UserContext db = new ShopProject.Areas.Shopper.Models.UserContext();
}
<div data-vide-bg="video/video" style="position: relative;">
    <div style="position: absolute; z-index: -1; top: 0px; left: 0px; bottom: 0px; right: 0px; overflow: hidden; background-size: cover;
        background-repeat: no-repeat; background-position: 50% 50%; background-image: none;">
        <video autoplay="autoplay" loop="loop" muted="" style="margin: auto; position: absolute; z-index: -1; top: 50%; left: 50%; transform: translate(-50%, -50%);
             visibility: visible; width: 1024px; height: auto;">
            <source src="~/video/quangcao.mp4" type="video/mp4">
            <source src="~/video/video.gif" type="image/gif" />
        </video>
    </div>
    <div class="container">
        <div class="banner-info">
            <div class="search-form">
                @using (Ajax.BeginForm("SearchByName", "Products", new AjaxOptions { InsertionMode = InsertionMode.Replace, HttpMethod = "Get" }))
                {
                    <input type="text" style="background-color:rgba(0, 0, 255, 0.50);" placeholder="Tìm kiếm..." name="name">
                    <button type="submit" class="btn btn-default" style="background-color:rgba(0, 0, 255, 0.50);"><i class=" fa fa-search"></i></button>
                }
            </div>
        </div>
    </div>
</div>

<div class="content-top ">
    <div class="container ">
        <ul class="htmlcontent-item-1 row clearfix" style="list-style-type:none;">
            <li class="htmlcontent-item-1 col-sm-3">
                <a href="@Url.Action("ProductsBytypeName", "Products", new { name="Áo sơ mi", page=1 })" class="hoverSlideHome" title="">
                    <img src="/Image/slide-1-trang-chu-slide-1.jpg" class="item-img " title="" alt="" width="270" height="400" />
                </a>
            </li>
            <li class="htmlcontent-item-2 col-sm-3">
                <a href="@Url.Action("ProductsBytypeName", "Products", new { name="Phụ kiện", page=1 })" class="hoverSlideHome" title="">
                    <img src="/Image/slide-2-trang-chu-slide-2.jpg" class="item-img " title="" alt="" width="570" height="227">
                </a>
            </li>
            <li class="htmlcontent-item-3 col-sm-3">
            </li>
            <li class="htmlcontent-item-4 col-sm-3">
                <a href="@Url.Action("ProductsBytypeName", "Products", new { name="Quần kaki", page=1 })" class="hoverSlideHome" title="">
                    <img src="/Image/slide-4-trang-chu-slide-4.jpg" class="item-img " title="" alt="" width="270" height="400">
                </a>
            </li>
        </ul>
        <div class="spec ">
            <h3><a href="@Url.Action("ProductsBestNew", "Products", new { title="Thời trang mới nhất", page=1 })" style="text-decoration:none;">Thời trang mới nhất</a></h3>
            <div class="ser-t">
                <b></b>
                <span><i></i></span>
                <b class="line"></b>
            </div>
        </div>
        <div class="tab-head ">
            <div class=" tab-content tab-content-t ">
                <div class="tab-pane active text-style" id="tab1">
                    <div class=" con-w3l">
                        @{int qtt = 0;}
                        @foreach (var item in db.Products.SqlQuery("SELECT * FROM Products ORDER BY proUpdateDate DESC"))
                        {
                            qtt++;
                            if (qtt > 4)
                            {
                                break;
                            }
                            int newPrice = Int32.Parse(item.proPrice) - ((Int32.Parse(item.proPrice) * item.proDiscount.Value) / 100);
                            <div class="col-md-3 m-wthree" style="margin-bottom:30px;">
                                <div class="col-m">
                                    <a href="@Url.Action("ProductDetail", "Products", new { id=item.proID })" class="offer-img">
                                        <img src="@item.proPhoto" width="150" height="150" alt="@item.proPhoto">
                                        @if (Int32.Parse(item.proPrice) > newPrice)
                                        {
                                            <div class="offer"><p><span>Giảm @item.proDiscount %</span></p></div>
                                        }
                                        else
                                        {

                                        }
                                    </a>
                                    <div class="mid-1">
                                        <div class="women">
                                            @if (item.proName.Length > 20)
                                            {
                                                <h6><a href="@Url.Action("ProductDetail", "Products", new { id=item.proID })" data-toggle="tooltip" title="@item.proName">@item.proName.Substring(0, 19) . . .</a></h6>
                                            }
                                            else
                                            {
                                                <h6><a href="@Url.Action("ProductDetail", "Products", new { id=item.proID })">@item.proName</a></h6>
                                            }
                                        </div>
                                        (Size: @item.proSize)
                                        <div class="mid-2">
                                            <p><label>@proDAO.formatNumber(item.proPrice) VNĐ</label><em class="item_price">@proDAO.formatNumber(newPrice.ToString()) VNĐ</em></p>
                                            <div class="clearfix"></div>
                                            <div class="block">
                                                @if (db.Rates.Find(item.proID) != null)
                                                {
                                                    for (int i = 0; i < db.Rates.Find(item.proID).rateStar; i++)
                                                    {
                                                        <img src="~/Image/star.png" style="background-color:rgb(255, 172, 0);" />
                                                    }
                                                    for (int i = 0; i < 5 - db.Rates.Find(item.proID).rateStar; i++)
                                                    {
                                                        <img src="~/Image/star.png" style="background-color:#b0b0b0" />
                                                    }
                                                }
                                                else
                                                {
                                                    for (int i = 0; i < 5; i++)
                                                    {
                                                        <img src="~/Image/star.png" style="background-color:#b0b0b0" />
                                                    }
                                                }
                                            </div>
                                            <div>
                                                <a href="#"><img src="@item.Producer.pdcPhoto" width="20" height="20" /> @item.Producer.pdcName</a>
                                            </div>
                                            <div class="clearfix"></div>
                                        </div>
                                        <div class="add">
                                            <a class="btn btn-success" href="@Url.Action("ThemVaoGio", "GioHang", new { SanPhamID = item.proID })"> <span class="glyphicon glyphicon-shopping-cart"></span>  Thêm vào giỏ </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <!--image khuyến mãi-->
        <div>
            <img src="~/Image/sukien1.jpg" class="center-block" />
        </div>
        <!--End Image khuyến mãi-->
        <div class="spec " style="margin-top:30px;">
            <h3><a href="@Url.Action("ProductsBestDiscount", "Products", new { title="Thời trang giảm giá cao nhất", page=1 })" style="text-decoration:none;">Thời trang giảm giá cao nhất</a></h3>
            <div class="ser-t">
                <b></b>
                <span><i></i></span>
                <b class="line"></b>
            </div>
        </div>
        <div class="tab-head ">
            <div class=" tab-content tab-content-t ">
                <div class="tab-pane active text-style" id="tab1">
                    <div class=" con-w3l">
                        @{int qtt1 = 0;}
                        @foreach (var item in db.Products.SqlQuery("SELECT * FROM Products ORDER BY proDiscount DESC"))
                        {
                            qtt1++;
                            if (qtt1 > 4)
                            {
                                break;
                            }
                            int newPrice = Int32.Parse(item.proPrice) - ((Int32.Parse(item.proPrice) * item.proDiscount.Value) / 100);
                            <div class="col-md-3 m-wthree" style="margin-bottom:30px;">
                                <div class="col-m">
                                    <a href="@Url.Action("ProductDetail", "Products", new { id=item.proID })" class="offer-img">
                                        <img src="@item.proPhoto" width="150" height="150" alt="@item.proPhoto">
                                        @if (Int32.Parse(item.proPrice) > newPrice)
                                        {
                                            <div class="offer"><p><span>Giảm @item.proDiscount %</span></p></div>
                                        }
                                        else
                                        {

                                        }
                                    </a>
                                    <div class="mid-1">
                                        <div class="women">
                                            @if (item.proName.Length > 20)
                                            {
                                                <h6><a href="@Url.Action("ProductDetail", "Products", new { id=item.proID })" data-toggle="tooltip" title="@item.proName">@item.proName.Substring(0, 19) . . .</a></h6>
                                            }
                                            else
                                            {
                                                <h6><a href="@Url.Action("ProductDetail", "Products", new { id=item.proID })">@item.proName</a></h6>
                                            }
                                        </div>
                                        (Size: @item.proSize)
                                        <div class="mid-2">
                                            <p><label>@proDAO.formatNumber(item.proPrice) VNĐ</label><em class="item_price">@proDAO.formatNumber(newPrice.ToString()) VNĐ</em></p>
                                            <div class="clearfix"></div>
                                            <div class="block">
                                                @if (db.Rates.Find(item.proID) != null)
                                                {
                                                    for (int i = 0; i < db.Rates.Find(item.proID).rateStar; i++)
                                                    {
                                                        <img src="~/Image/star.png" style="background-color:rgb(255, 172, 0);" />
                                                    }
                                                    for (int i = 0; i < 5 - db.Rates.Find(item.proID).rateStar; i++)
                                                    {
                                                        <img src="~/Image/star.png" style="background-color:#b0b0b0" />
                                                    }
                                                }
                                                else
                                                {
                                                    for (int i = 0; i < 5; i++)
                                                    {
                                                        <img src="~/Image/star.png" style="background-color:#b0b0b0" />
                                                    }
                                                }
                                            </div>
                                            <div>
                                                <a href="#"><img src="@item.Producer.pdcPhoto" width="20" height="20" /> @item.Producer.pdcName</a>
                                            </div>
                                            <div class="clearfix"></div>
                                        </div>
                                        <div class="add">
                                            <a class="btn btn-success" href="@Url.Action("ThemVaoGio", "GioHang", new { SanPhamID = item.proID })"> <span class="glyphicon glyphicon-shopping-cart"></span> Thêm vào giỏ </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        
</div>


<div class="container">
    <div class="head">
        <h1 style="color: red;">ĐỂ LẠI BÌNH LUẬN VỀ TRẢI NGHIỆM CỦA BẠN ĐỂ CHÚNG TÔI CÓ THỂ HOÀN THIỆN HƠN.</h1>
    </div>
    <div><span id="comment">0</span> bình luận</div>
    <div class="text">
        <p>Cảm ơn bạn đã góp ý.</p>
    </div>
    <div class="comments"></div>
    <div class="commentbox">
        <img src="~/Image/user.png" alt="">
        <div class="content">
            <h2>Bình luận bởi :</h2>
            <input type="text" value="Oanh" class="user">
            <textarea class="usercomment" placeholder="Write your comment here..."></textarea>
            <div class="buttons">
                <button type="submit" disabled id="publish">Đăng</button>

            </div>
        </div>
    </div>

</div>

<script>
   "use strict";
const userId = {
    name: null,
    identity: null,
    image: null,
    message: null,
    date: null
};
const userComment = document.querySelector(".usercomment");
const publishBtn = document.querySelector("#publish");
const comments = document.querySelector(".comments");
const userName = document.querySelector(".user");

// Enable/disable the publish button based on input
userComment.addEventListener("input", e => {
    if (userComment.value) {
        publishBtn.disabled = false;
        publishBtn.classList.add("active");
    } else {
        publishBtn.disabled = true;
        publishBtn.classList.remove("active");
    }
});

// Function to add comment
function addPost() {
    if (!userComment.value) return;

    userId.name = userName.value;
    userId.image = userId.name === "Anonymous" ? "/Image/usermini.png" : "/Image/user.png";
    userId.message = userComment.value;
    userId.date = new Date().toLocaleString();

    // Create the HTML for the new comment
    const published = `
        <div class="parents">
            <img src="${userId.image}" alt="User Image">
            <div>
                <h1>${userId.name}</h1>
                <p>${userId.message}</p>
                <div class="engagements">
                   <img src="/Image/like.png" alt="Like">
                   <img src="/Image/share.png" alt="Share">
                </div>
                <span class="date">${userId.date}</span>
            </div>
        </div>`;

    // Add the new comment to the DOM
    comments.innerHTML += published;

    // Save the new comment to localStorage
    saveCommentToLocalStorage(userId);

    // Clear the input field
    userComment.value = "";
    userComment.dispatchEvent(new Event('input')); // Trigger input event to update button state

    // Update the comment count
    const commentsNum = document.querySelectorAll(".parents").length;
    document.getElementById("comment").textContent = commentsNum;
}

// Function to save comment to localStorage
function saveCommentToLocalStorage(comment) {
    let commentsData = JSON.parse(localStorage.getItem("comments")) || [];
    commentsData.push(comment);
    localStorage.setItem("comments", JSON.stringify(commentsData));
}

// Load comments from localStorage when the page loads
function loadCommentsFromLocalStorage() {
    const commentsData = JSON.parse(localStorage.getItem("comments")) || [];
    commentsData.forEach(comment => {
        const published = `
            <div class="parents">
                <img src="${comment.image}" alt="User Image">
                <div>
                    <h1>${comment.name}</h1>
                    <p>${comment.message}</p>
                    <div class="engagements">
                       <img src="/Image/like.png" alt="Like">
                       <img src="/Image/share.png" alt="Share">
                    </div>
                    <span class="date">${comment.date}</span>
                </div>
            </div>`;
        comments.innerHTML += published;
    });

    // Update the comment count
    const commentsNum = commentsData.length;
    document.getElementById("comment").textContent = commentsNum;
}

// Event listener to publish comment
publishBtn.addEventListener("click", addPost);

// Load comments when the page loads
window.onload = function() {
    loadCommentsFromLocalStorage();
};

</script>



<script src="https://www.gstatic.com/dialogflow-console/fast/messenger/bootstrap.js?v=1"></script>
<df-messenger intent="WELCOME"
              chat-title="cua-hang-thoi-trang-oanh"
              agent-id="9529c051-c669-4c4e-9bd6-2302a72f669e"
              language-code="en"></df-messenger>

<script>
    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip();
    });
</script>
<style>
    .hoverSlideHome img {
        -webkit-transform: scale(0.8); /*Webkit: Scale down image to 0.8x original size*/
        -moz-transform: scale(0.8); /*Mozilla scale version*/
        -o-transform: scale(0.8); /*Opera scale version*/
        -webkit-transition-duration: 0.5s; /*Webkit: Animation duration*/
        -moz-transition-duration: 0.5s; /*Mozilla duration version*/
        -o-transition-duration: 0.5s; /*Opera duration version*/
        opacity: 0.9; /*initial opacity of images*/
        margin: 0 10px 5px 0; /*margin between images*/
    }

        .hoverSlideHome img:hover {
            -webkit-transform: scale(1.1); /*Webkit: Scale up image to 1.2x original size*/
            -moz-transform: scale(1.1); /*Mozilla scale version*/
            -o-transform: scale(1.1); /*Opera scale version*/
            box-shadow: 0px 0px 30px gray; /*CSS3 shadow: 30px blurred shadow all around image*/
            -webkit-box-shadow: 0px 0px 30px gray; /*Safari shadow version*/
            -moz-box-shadow: 0px 0px 30px gray; /*Mozilla shadow version*/
            opacity: 1;
        }

    .toasang {
        margin: 20px;
        position: relative;
        display: block;
        width: 80px;
        height: 80px;
        text-align: center;
        border-radius: 100%;
        font: 700 30px/80px 'arial';
        text-decoration: none;
        color: #313131;
        z-index: 1;
        -webkit-transition: all .3s ease;
        -moz-transition: all .3s ease;
        -ms-transition: all .3s ease;
        -o-transition: all .3s ease;
        transition: all .3s ease;
    }

        .toasang:after {
            content: '';
            display: block;
            position: absolute;
            width: 100%;
            height: 100%;
            margin: auto;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            border-radius: 100%;
            background: #dfdfdf;
            z-index: -1;
            -webkit-transition: all .3s ease;
            -moz-transition: all .3s ease;
            -ms-transition: all .3s ease;
            -o-transition: all .3s ease;
            transition: all .3s ease;
        }

        .toasang:hover {
            color: #fff;
            background: #399;
        }

            .toasang:hover:after {
                background: transparent;
                -webkit-transform: scale(1.6);
                -moz-transform: scale(1.6);
                -ms-transform: scale(1.6);
                -o-transform: scale(1.6);
                transform: scale(1.6);
            }

    .commentbox {
        display: flex;
        justify-content: space-around;
        padding: 10px;
    }

        .commentbox > img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 20px;
            object-fit: cover;
            object-position: center;
        }

    .content {
        width: 100%;
    }

    .user {
        border: none;
        outline: none;
        margin: 5px 0;
        color: #808080;
        margin-left: 20px;
        padding: 10px;
    }

    .usercomment {
        border: none;
        padding: 10px;
        outline: none;
        border-bottom: 2px solid blue;
        margin-bottom: 10px;
        width: 95%;
    }

    .buttons {
        display: flex;
        justify-content: space-between;
        align-items: center;
        color: #808080;
    }

        .buttons button {
            padding: 5px 10px;
            background: lightgrey;
            color: #808080;
            text-transform: uppercase;
            border: none;
            outline: none;
            border-radius: 3px;
            cursor: pointer;
            transition: background 0.3s;
        }

            .buttons button.active {
                background: blue;
                color: #fff;
            }

    .policy {
        margin: 20px 0;
        font-size: 12px;
        font-family: Arial, sans-serif;
        color: #808080;
    }

        .policy a {
            text-decoration: none;
            color: blue;
        }

    .parents {
        font-family: Arial, sans-serif;
        display: flex;
        margin-bottom: 30px;
    }

        .parents h1 {
            font-size: 14px;
        }

        .parents p {
            margin: 10px 0;
            font-size: 14px;
        }

        .parents > img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 20px;
            object-fit: cover;
            object-position: center;
        }

    .engagements {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
    }

        .engagements img {
            width: 20px;
        }

            .engagements img:nth-child(1) {
                margin-right: 10px;
                width: 25px;
            }

    .date {
        color: #808080;
        font-size: 12px;
    }
</style>